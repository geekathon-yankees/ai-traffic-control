name: "Deploy Python App to AWS EC2"

on:
  workflow_dispatch:
  push:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$EC2_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        env:
          EC2_KEY: ${{ secrets.EC2_KEY }}
      - name: Copy Python app to EC2
        run: |
          scp -o StrictHostKeyChecking=no -r ml-gateway/ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.DEPLOY_PATH }}
          scp -o StrictHostKeyChecking=no ml-gateway/requirements.txt ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.DEPLOY_PATH }}/ml-gateway/
      - name: Ensure Python 3 and pip on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "if ! python3 --version; then \
            if [ -f /etc/os-release ] && grep -qi 'ubuntu\|debian' /etc/os-release; then \
              sudo apt-get update && sudo apt-get install -y python3 python3-pip; \
            elif [ -f /etc/os-release ] && grep -qi 'amzn' /etc/os-release; then \
              sudo yum install -y python3 python3-pip; \
            else \
              echo 'Unsupported OS. Please install Python 3 manually.'; exit 1; \
            fi; \
          fi"
      - name: Install Python dependencies on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd /app/ml-gateway && python3 -m pip install --user -r requirements.txt"
      - name: Restart Python app on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "pkill -f 'python3 main.py' || true && cd /app/ml-gateway && nohup python3 main.py > /app/ml-gateway/app.log 2>&1 &"
      - name: Check if Python process is running
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "ps aux | grep '[p]ython3 main.py' || echo 'Python process not running.'"
      - name: Show last 20 lines of app log
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "tail -20 /app/ml-gateway/app.log || echo 'Log file not found.'"
